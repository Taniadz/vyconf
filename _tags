# OASIS_START
# DO NOT EDIT (digest: 4f1983ffc92b04ffaba30b6e019eb870)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library vyconf
"src/vyconf.cmxs": use_vyconf
# Library vyconf-config
"src/vyconf-config.cmxs": use_vyconf-config
# Library vyconf-client
"src/vyconf-client.cmxs": use_vyconf-client
# Executable vyconfd
<src/vyconfd.{native,byte}>: pkg_batteries
<src/vyconfd.{native,byte}>: pkg_fileutils
<src/vyconfd.{native,byte}>: pkg_lwt
<src/vyconfd.{native,byte}>: pkg_lwt.ppx
<src/vyconfd.{native,byte}>: pkg_lwt.unix
<src/vyconfd.{native,byte}>: pkg_ocaml-protoc
<src/vyconfd.{native,byte}>: pkg_ocplib-endian
<src/vyconfd.{native,byte}>: pkg_pcre
<src/vyconfd.{native,byte}>: pkg_ppx_deriving.show
<src/vyconfd.{native,byte}>: pkg_ppx_deriving_yojson
<src/vyconfd.{native,byte}>: pkg_sha
<src/vyconfd.{native,byte}>: pkg_toml
<src/vyconfd.{native,byte}>: pkg_xml-light
<src/vyconfd.{native,byte}>: use_vyconf
<src/vyconfd.{native,byte}>: use_vyconf-config
<src/*.ml{,i,y}>: pkg_batteries
<src/*.ml{,i,y}>: pkg_fileutils
<src/*.ml{,i,y}>: pkg_lwt
<src/*.ml{,i,y}>: pkg_lwt.ppx
<src/*.ml{,i,y}>: pkg_lwt.unix
<src/*.ml{,i,y}>: pkg_ocaml-protoc
<src/*.ml{,i,y}>: pkg_ocplib-endian
<src/*.ml{,i,y}>: pkg_pcre
<src/*.ml{,i,y}>: pkg_ppx_deriving.show
<src/*.ml{,i,y}>: pkg_ppx_deriving_yojson
<src/*.ml{,i,y}>: pkg_sha
<src/*.ml{,i,y}>: pkg_toml
<src/*.ml{,i,y}>: pkg_xml-light
<src/*.ml{,i,y}>: use_vyconf
<src/*.ml{,i,y}>: use_vyconf-config
# Executable vytree_test
<test/vytree_test.{native,byte}>: pkg_batteries
<test/vytree_test.{native,byte}>: pkg_fileutils
<test/vytree_test.{native,byte}>: pkg_oUnit
<test/vytree_test.{native,byte}>: pkg_pcre
<test/vytree_test.{native,byte}>: pkg_ppx_deriving.show
<test/vytree_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/vytree_test.{native,byte}>: pkg_xml-light
<test/vytree_test.{native,byte}>: use_vyconf
# Executable reference_tree_test
<test/reference_tree_test.{native,byte}>: pkg_batteries
<test/reference_tree_test.{native,byte}>: pkg_fileutils
<test/reference_tree_test.{native,byte}>: pkg_oUnit
<test/reference_tree_test.{native,byte}>: pkg_pcre
<test/reference_tree_test.{native,byte}>: pkg_ppx_deriving.show
<test/reference_tree_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/reference_tree_test.{native,byte}>: pkg_xml-light
<test/reference_tree_test.{native,byte}>: use_vyconf
# Executable config_tree_test
<test/config_tree_test.{native,byte}>: pkg_batteries
<test/config_tree_test.{native,byte}>: pkg_fileutils
<test/config_tree_test.{native,byte}>: pkg_oUnit
<test/config_tree_test.{native,byte}>: pkg_pcre
<test/config_tree_test.{native,byte}>: pkg_ppx_deriving.show
<test/config_tree_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/config_tree_test.{native,byte}>: pkg_xml-light
<test/config_tree_test.{native,byte}>: use_vyconf
# Executable vylist_test
<test/vylist_test.{native,byte}>: pkg_oUnit
# Executable value_checker_test
<test/value_checker_test.{native,byte}>: pkg_batteries
<test/value_checker_test.{native,byte}>: pkg_fileutils
<test/value_checker_test.{native,byte}>: pkg_oUnit
<test/value_checker_test.{native,byte}>: pkg_pcre
<test/value_checker_test.{native,byte}>: pkg_ppx_deriving.show
<test/value_checker_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/value_checker_test.{native,byte}>: pkg_xml-light
<test/value_checker_test.{native,byte}>: use_vyconf
# Executable util_test
<test/util_test.{native,byte}>: pkg_batteries
<test/util_test.{native,byte}>: pkg_fileutils
<test/util_test.{native,byte}>: pkg_oUnit
<test/util_test.{native,byte}>: pkg_pcre
<test/util_test.{native,byte}>: pkg_ppx_deriving.show
<test/util_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/util_test.{native,byte}>: pkg_xml-light
<test/util_test.{native,byte}>: use_vyconf
# Executable vyconf_config_test
<test/vyconf_config_test.{native,byte}>: pkg_batteries
<test/vyconf_config_test.{native,byte}>: pkg_fileutils
<test/vyconf_config_test.{native,byte}>: pkg_oUnit
<test/vyconf_config_test.{native,byte}>: pkg_ppx_deriving.show
<test/vyconf_config_test.{native,byte}>: pkg_toml
<test/vyconf_config_test.{native,byte}>: use_vyconf-config
# Executable curly_parser_test
<test/curly_parser_test.{native,byte}>: pkg_batteries
<test/curly_parser_test.{native,byte}>: pkg_fileutils
<test/curly_parser_test.{native,byte}>: pkg_oUnit
<test/curly_parser_test.{native,byte}>: pkg_pcre
<test/curly_parser_test.{native,byte}>: pkg_ppx_deriving.show
<test/curly_parser_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/curly_parser_test.{native,byte}>: pkg_xml-light
<test/curly_parser_test.{native,byte}>: use_vyconf
# Executable session_test
<test/session_test.{native,byte}>: pkg_batteries
<test/session_test.{native,byte}>: pkg_fileutils
<test/session_test.{native,byte}>: pkg_oUnit
<test/session_test.{native,byte}>: pkg_pcre
<test/session_test.{native,byte}>: pkg_ppx_deriving.show
<test/session_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/session_test.{native,byte}>: pkg_toml
<test/session_test.{native,byte}>: pkg_xml-light
<test/session_test.{native,byte}>: use_vyconf
<test/session_test.{native,byte}>: use_vyconf-config
<test/*.ml{,i,y}>: pkg_oUnit
<test/*.ml{,i,y}>: pkg_toml
<test/*.ml{,i,y}>: use_vyconf-config
# Executable vytree_load_test
<test/vytree_load_test.{native,byte}>: pkg_batteries
<test/vytree_load_test.{native,byte}>: pkg_fileutils
<test/vytree_load_test.{native,byte}>: pkg_pcre
<test/vytree_load_test.{native,byte}>: pkg_ppx_deriving.show
<test/vytree_load_test.{native,byte}>: pkg_ppx_deriving_yojson
<test/vytree_load_test.{native,byte}>: pkg_xml-light
<test/vytree_load_test.{native,byte}>: use_vyconf
<test/*.ml{,i,y}>: pkg_batteries
<test/*.ml{,i,y}>: pkg_fileutils
<test/*.ml{,i,y}>: pkg_pcre
<test/*.ml{,i,y}>: pkg_ppx_deriving.show
<test/*.ml{,i,y}>: pkg_ppx_deriving_yojson
<test/*.ml{,i,y}>: pkg_xml-light
<test/*.ml{,i,y}>: use_vyconf
# OASIS_STOP

true: strict_sequence
true: bin_annot
true: use_menhir, explain
