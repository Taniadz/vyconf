Name: VyConf
Version: 0.1
Synopsis: Appliance configuration framework
Authors: VyOS maintainers <maintainers@vyos.net>
License: LGPL with OCaml linking exception

Description: VyConf
Homepage: http://vyos.net

OASISFormat: 0.4
BuildTools: ocamlbuild
Plugins: META (0.4), DevFiles (0.4)

Library "vyconf"
  Path: src
  Modules: Vytree, Vylist, Value_checker
  Install: false

Library "vytree"
  Path: src
  Modules: Vytree
  FindlibParent: vyconf

Library "reference_tree"
  Path: src
  Modules: Reference_tree
  FindlibParent: vyconf
  BuildDepends: xml-light, pcre

Library "value_checker"
  Path: src
  Modules: Value_checker
  FindlibParent: vyconf
  BuildDepends: pcre

Library "util"
  Path: src
  Modules: Util
  FindlibParent: vyconf
  BuildDepends: xml-light

Executable "vyconfd"
  Path: src
  MainIs: vyconfd.ml
  CompiledObject: best

Executable "vyconf_tree_test"
  Path: test
  MainIs: vyconf_tree_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends:  oUnit, vyconf

Executable "reference_tree_test"
  Path: test
  MainIs: reference_tree_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, xml-light, pcre, vyconf

Executable "vylist_test"
  Path: test
  MainIs: vylist_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends:  oUnit, vyconf

Executable "value_checker_test"
  Path: test
  MainIs: value_checker_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends:  oUnit, pcre, vyconf

Executable "util_test"
  Path: test
  MainIs: util_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, xml-light

Test "vyconf_tree_test"
  Run$: flag(tests)
  TestTools: vyconf_tree_test
  Command: $vyconf_tree_test
  WorkingDirectory: test

Test "reference_tree_test"
  Run$: flag(tests)
  TestTools: reference_tree_test
  Command: $reference_tree_test
  WorkingDirectory: test

Test "vylist_test"
  Run$: flag(tests)
  TestTools: vylist_test
  Command: $vylist_test
  WorkingDirectory: test

Test "value_checker_test"
  Run$: flag(tests)
  TestTools: value_checker_test
  Command: $value_checker_test
  WorkingDirectory: test

Test "util_test"
  Run$: flag(tests)
  TestTools: util_test
  Command: $util_test
  WorkingDirectory: test
